---
import {portfolioCardsData} from "@services/getPortfolioCards";
import Title from "@src/components/atoms/Title/Title";
import CardPortfolio from "../../molecules/CardPortfolio/CardPortfolio.astro";


import defaultImage from "../../../../public/img/metaBanner.webp";

// FunciÃ³n para obtener los datos de la API de respaldo
async function fetchBackupData() {
  try {
    const response = await fetch("https://itssofi.dev/api/portafolio");
    const data = await response.json();
    return data.portafolio;
  } catch (error) {
    console.error("Error fetching backup data:", error);
    return [];
  }
}

// Intentar obtener los datos principales
let mainData = [];
try {
  const data = await portfolioCardsData();
  mainData = data.proyectosPortafolio.edges.map((item) => {
    const skillicons = item.node.proyectoPortafolio.skillicons.map((icon) => {
      const parts = icon.split(":");
      return parts.length > 1 ? parts.slice(1).join(":").trim() : icon.trim();
    });

    return {
      title: item.node.title,
      description: item.node.proyectoPortafolio.description,
      imgSrc: item.node.proyectoPortafolio.imgsrc_url?.node?.link || defaultImage,
      demoURL: item.node.proyectoPortafolio.demourl,
      repoURL: item.node.proyectoPortafolio.repoUrl,
      skills: item.node.proyectoPortafolio.skills,
      skillicons,
    };
  });
} catch (error) {
  console.error("Error fetching main data:", error);
  // Si falla, obtener los datos de respaldo
  mainData = await fetchBackupData();
}

const { cardsLength = 6 } = Astro.props;
---

<section class="portfolio" id="portfolio">
  <Title titleDesc="Portfolio" clase="title-dark portfolio__title" />
  <div class="card__section">
    {
      mainData
        .slice(0, cardsLength)
        .map((data) => (
          <CardPortfolio
            title={data.title}
            description={data.description}
            imgSrc={data.imgSrc}
            demoURL={data.demoURL}
            repoURL={data.repoURL}
            skills={data.skills}
            skillIcon={data.skillicons}
          />
        ))
    }
  </div>
</section>